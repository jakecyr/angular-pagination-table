{"version":3,"sources":["ng://@jakecyr/pagination-table/lib/pagination-table.service.ts","ng://@jakecyr/pagination-table/lib/pagination-table.component.ts","ng://@jakecyr/pagination-table/lib/pagination-table.module.ts"],"names":["PaginationTableService","prototype","getRowSet","data","page","perPage","set","start","length","slice","getMaxPages","pages","Math","ceil","Injectable","args","providedIn","PaginationTableComponent","paginationTableService","this","clickRow","EventEmitter","currentData","defaultPerPage","ngOnChanges","currentPage","refreshTable","incrementPage","decrementPage","maxPages","Component","selector","template","Input","Output","PaginationTableModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"+XAAA,IAAAA,EAAA,WAGA,SAAAA,YAKIA,EAAAC,UAAAC,UAAA,SAAUC,EAAiBC,EAAcC,OACjCC,EAAM,GACJC,EAAQH,EAAOC,EAMrB,OAJIF,GAAQA,EAAKK,OAAS,IACtBF,EAAMH,EAAKM,MAAMF,EAAOA,EAAQF,IAG7BC,GAEXN,EAAAC,UAAAS,YAAA,SAAYP,EAAiBE,OACrBM,EAAQ,EAMZ,OAJIR,GAAQA,EAAKK,OAAS,IACtBG,EAAQC,KAAKC,KAAKV,EAAKK,OAASH,IAG7BM,uBAtBdG,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,kHAJhB,GCAAC,EAAA,WA0BI,SAAAA,EACYC,GAAAC,KAAAD,uBAAAA,EATFC,KAAAC,SAAW,IAAIC,EAAAA,aAGzBF,KAAAG,YAAyB,GAGhBH,KAAAI,eAAyB,GAuBtC,OAjBIN,EAAAhB,UAAAuB,YAAA,WACIL,KAAKM,YAAc,EACnBN,KAAKO,gBAETT,EAAAhB,UAAA0B,cAAA,WACIR,KAAKM,cACLN,KAAKO,gBAETT,EAAAhB,UAAA2B,cAAA,WACIT,KAAKM,cACLN,KAAKO,gBAEDT,EAAAhB,UAAAyB,aAAR,eACUrB,EAAUc,KAAKd,SAAWc,KAAKI,eACrCJ,KAAKG,YAAcH,KAAKD,uBAAuBhB,UAAUiB,KAAKhB,KAAMgB,KAAKM,YAAapB,GACtFc,KAAKU,SAAWV,KAAKD,uBAAuBR,YAAYS,KAAKhB,KAAME,wBAvC1EyB,EAAAA,UAASf,KAAA,CAAC,CACPgB,SAAU,uBACVC,SAAA,qxBANKhC,mCAUJiC,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,uBACAA,EAAAA,wBAEAC,EAAAA,UA6BLjB,EA/CA,GCAA,IAAAkB,EAAA,WAIA,SAAAA,KAWqC,2BAXpCC,EAAAA,SAAQrB,KAAA,CAAC,CACNsB,aAAc,CACVpB,GAEJqB,QAAS,CACLC,EAAAA,cAEJC,QAAS,CACLvB,OAG6BkB,EAfrC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DataRow } from './models/data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaginationTableService {\n\n    getRowSet(data: DataRow[], page: number, perPage: number): DataRow[] {\n        let set = []\n        const start = page * perPage\n\n        if (data && data.length > 0) {\n            set = data.slice(start, start + perPage)\n        }\n\n        return set;\n    }\n    getMaxPages(data: DataRow[], perPage: number): number {\n        let pages = 0\n\n        if (data && data.length > 0) {\n            pages = Math.ceil(data.length / perPage)\n        }\n\n        return pages;\n    }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n\nimport { PaginationTableService } from './pagination-table.service';\nimport { DataRow } from './models/data.model';\nimport { Header } from './models/header.model'\n\n@Component({\n    selector: 'lib-pagination-table',\n    templateUrl: './pagination-table.component.html',\n})\nexport class PaginationTableComponent implements OnChanges {\n\n    @Input() data: DataRow[];\n    @Input() headers: Header[];\n    @Input() tableClasses: string;\n    @Input() buttonClasses: string;\n    @Input() perPage: number;\n\n    @Output() clickRow = new EventEmitter<DataRow[]>();\n\n    currentPage: number;\n    currentData: DataRow[] = []\n    maxPages: number;\n\n    readonly defaultPerPage: number = 10;\n\n    constructor(\n        private paginationTableService: PaginationTableService,\n    ) { }\n\n    ngOnChanges() {\n        this.currentPage = 0\n        this.refreshTable()\n    }\n    incrementPage() {\n        this.currentPage++;\n        this.refreshTable()\n    }\n    decrementPage() {\n        this.currentPage--;\n        this.refreshTable()\n    }\n    private refreshTable() {\n        const perPage = this.perPage || this.defaultPerPage;\n        this.currentData = this.paginationTableService.getRowSet(this.data, this.currentPage, perPage)\n        this.maxPages = this.paginationTableService.getMaxPages(this.data, perPage)\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { PaginationTableComponent } from './pagination-table.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        PaginationTableComponent,\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        PaginationTableComponent,\n    ],\n})\nexport class PaginationTableModule { }\n"]}